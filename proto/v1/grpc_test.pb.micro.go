// Code generated by protoc-gen-micro. DO NOT EDIT.
// versions:
// protoc-gen-go v3.10.0
// source: grpc_test.proto

package grpc_test

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro-community/micro/v3/service/api"
	client "github.com/micro-community/micro/v3/service/client"
	server "github.com/micro-community/micro/v3/service/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for GrpcTest service

func NewGrpcTestEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for GrpcTest service

type GrpcTestService interface {
	Test(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type grpcTestService struct {
	c    client.Client
	name string
}

func NewGrpcTestService(name string, c client.Client) GrpcTestService {
	return &grpcTestService{
		c:    c,
		name: name,
	}
}

func (c *grpcTestService) Test(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "GrpcTest.Test", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GrpcTest service

type GrpcTestHandler interface {
	Test(context.Context, *Request, *Response) error
}

func RegisterGrpcTestHandler(s server.Server, hdlr GrpcTestHandler, opts ...server.HandlerOption) error {
	type grpcTest interface {
		Test(ctx context.Context, in *Request, out *Response) error
	}
	type GrpcTest struct {
		grpcTest
	}
	h := &grpcTestHandler{hdlr}
	return s.Handle(s.NewHandler(&GrpcTest{h}, opts...))
}

type grpcTestHandler struct {
	GrpcTestHandler
}

func (h *grpcTestHandler) Test(ctx context.Context, in *Request, out *Response) error {
	return h.GrpcTestHandler.Test(ctx, in, out)
}

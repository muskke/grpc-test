// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: grpc_test_v3.proto

package grpc_test

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro-community/micro/v3/service/api"
	client "github.com/micro-community/micro/v3/service/client"
	server "github.com/micro-community/micro/v3/service/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for GrpcTestV3 service

func NewGrpcTestV3Endpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for GrpcTestV3 service

type GrpcTestV3Service interface {
	Test(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type grpcTestV3Service struct {
	c    client.Client
	name string
}

func NewGrpcTestV3Service(name string, c client.Client) GrpcTestV3Service {
	return &grpcTestV3Service{
		c:    c,
		name: name,
	}
}

func (c *grpcTestV3Service) Test(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "GrpcTestV3.Test", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GrpcTestV3 service

type GrpcTestV3Handler interface {
	Test(context.Context, *Request, *Response) error
}

func RegisterGrpcTestV3Handler(s server.Server, hdlr GrpcTestV3Handler, opts ...server.HandlerOption) error {
	type grpcTestV3 interface {
		Test(ctx context.Context, in *Request, out *Response) error
	}
	type GrpcTestV3 struct {
		grpcTestV3
	}
	h := &grpcTestV3Handler{hdlr}
	return s.Handle(s.NewHandler(&GrpcTestV3{h}, opts...))
}

type grpcTestV3Handler struct {
	GrpcTestV3Handler
}

func (h *grpcTestV3Handler) Test(ctx context.Context, in *Request, out *Response) error {
	return h.GrpcTestV3Handler.Test(ctx, in, out)
}
